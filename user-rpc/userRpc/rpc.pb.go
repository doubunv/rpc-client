// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.19.4
// source: dsl/rpc.proto

package userRpc

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type LoginByAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginByAccountReq) Reset() {
	*x = LoginByAccountReq{}
	mi := &file_dsl_rpc_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginByAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByAccountReq) ProtoMessage() {}

func (x *LoginByAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByAccountReq.ProtoReflect.Descriptor instead.
func (*LoginByAccountReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{0}
}

func (x *LoginByAccountReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginByAccountReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginByAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LoginByAccountResp) Reset() {
	*x = LoginByAccountResp{}
	mi := &file_dsl_rpc_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginByAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByAccountResp) ProtoMessage() {}

func (x *LoginByAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByAccountResp.ProtoReflect.Descriptor instead.
func (*LoginByAccountResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{1}
}

func (x *LoginByAccountResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginByAccountResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LogoutReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LogoutReq) Reset() {
	*x = LogoutReq{}
	mi := &file_dsl_rpc_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutReq) ProtoMessage() {}

func (x *LogoutReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutReq.ProtoReflect.Descriptor instead.
func (*LogoutReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{2}
}

func (x *LogoutReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LogoutResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *LogoutResp) Reset() {
	*x = LogoutResp{}
	mi := &file_dsl_rpc_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LogoutResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LogoutResp) ProtoMessage() {}

func (x *LogoutResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LogoutResp.ProtoReflect.Descriptor instead.
func (*LogoutResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{3}
}

type RegisterByAccountReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	PUserId  int64  `protobuf:"varint,2,opt,name=pUserId,proto3" json:"pUserId,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterByAccountReq) Reset() {
	*x = RegisterByAccountReq{}
	mi := &file_dsl_rpc_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterByAccountReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterByAccountReq) ProtoMessage() {}

func (x *RegisterByAccountReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterByAccountReq.ProtoReflect.Descriptor instead.
func (*RegisterByAccountReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{4}
}

func (x *RegisterByAccountReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RegisterByAccountReq) GetPUserId() int64 {
	if x != nil {
		return x.PUserId
	}
	return 0
}

func (x *RegisterByAccountReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterByAccountResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RegisterByAccountResp) Reset() {
	*x = RegisterByAccountResp{}
	mi := &file_dsl_rpc_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterByAccountResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterByAccountResp) ProtoMessage() {}

func (x *RegisterByAccountResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterByAccountResp.ProtoReflect.Descriptor instead.
func (*RegisterByAccountResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{5}
}

func (x *RegisterByAccountResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterByAccountResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type LoginByEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *LoginByEmailReq) Reset() {
	*x = LoginByEmailReq{}
	mi := &file_dsl_rpc_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginByEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByEmailReq) ProtoMessage() {}

func (x *LoginByEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByEmailReq.ProtoReflect.Descriptor instead.
func (*LoginByEmailReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{6}
}

func (x *LoginByEmailReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *LoginByEmailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type LoginByEmailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *LoginByEmailResp) Reset() {
	*x = LoginByEmailResp{}
	mi := &file_dsl_rpc_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *LoginByEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*LoginByEmailResp) ProtoMessage() {}

func (x *LoginByEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use LoginByEmailResp.ProtoReflect.Descriptor instead.
func (*LoginByEmailResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{7}
}

func (x *LoginByEmailResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *LoginByEmailResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type RegisterByEmailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`
	PUserId  int64  `protobuf:"varint,2,opt,name=pUserId,proto3" json:"pUserId,omitempty"`
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"`
}

func (x *RegisterByEmailReq) Reset() {
	*x = RegisterByEmailReq{}
	mi := &file_dsl_rpc_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterByEmailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterByEmailReq) ProtoMessage() {}

func (x *RegisterByEmailReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterByEmailReq.ProtoReflect.Descriptor instead.
func (*RegisterByEmailReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{8}
}

func (x *RegisterByEmailReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *RegisterByEmailReq) GetPUserId() int64 {
	if x != nil {
		return x.PUserId
	}
	return 0
}

func (x *RegisterByEmailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type RegisterByEmailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token  string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	UserId int64  `protobuf:"varint,2,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *RegisterByEmailResp) Reset() {
	*x = RegisterByEmailResp{}
	mi := &file_dsl_rpc_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RegisterByEmailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RegisterByEmailResp) ProtoMessage() {}

func (x *RegisterByEmailResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RegisterByEmailResp.ProtoReflect.Descriptor instead.
func (*RegisterByEmailResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{9}
}

func (x *RegisterByEmailResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

func (x *RegisterByEmailResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type ParseTokenReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
}

func (x *ParseTokenReq) Reset() {
	*x = ParseTokenReq{}
	mi := &file_dsl_rpc_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTokenReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenReq) ProtoMessage() {}

func (x *ParseTokenReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenReq.ProtoReflect.Descriptor instead.
func (*ParseTokenReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{10}
}

func (x *ParseTokenReq) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type ParseTokenResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *ParseTokenResp) Reset() {
	*x = ParseTokenResp{}
	mi := &file_dsl_rpc_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ParseTokenResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ParseTokenResp) ProtoMessage() {}

func (x *ParseTokenResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ParseTokenResp.ProtoReflect.Descriptor instead.
func (*ParseTokenResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{11}
}

func (x *ParseTokenResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type AdminUserLoginReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   //账号，系统唯一
	Password string `protobuf:"bytes,2,opt,name=password,proto3" json:"password,omitempty"` //密码
}

func (x *AdminUserLoginReq) Reset() {
	*x = AdminUserLoginReq{}
	mi := &file_dsl_rpc_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserLoginReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserLoginReq) ProtoMessage() {}

func (x *AdminUserLoginReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserLoginReq.ProtoReflect.Descriptor instead.
func (*AdminUserLoginReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{12}
}

func (x *AdminUserLoginReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AdminUserLoginReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

type AdminUserLoginResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token string `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"` //登录成功返回的token
}

func (x *AdminUserLoginResp) Reset() {
	*x = AdminUserLoginResp{}
	mi := &file_dsl_rpc_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserLoginResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserLoginResp) ProtoMessage() {}

func (x *AdminUserLoginResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserLoginResp.ProtoReflect.Descriptor instead.
func (*AdminUserLoginResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{13}
}

func (x *AdminUserLoginResp) GetToken() string {
	if x != nil {
		return x.Token
	}
	return ""
}

type CreateAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Account  string `protobuf:"bytes,1,opt,name=account,proto3" json:"account,omitempty"`   //账号，必须唯一
	Name     string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`         //名称
	Password string `protobuf:"bytes,3,opt,name=password,proto3" json:"password,omitempty"` //密码
	RoleId   int64  `protobuf:"varint,4,opt,name=roleId,proto3" json:"roleId,omitempty"`    //管理员角色
}

func (x *CreateAdminUserReq) Reset() {
	*x = CreateAdminUserReq{}
	mi := &file_dsl_rpc_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminUserReq) ProtoMessage() {}

func (x *CreateAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminUserReq.ProtoReflect.Descriptor instead.
func (*CreateAdminUserReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{14}
}

func (x *CreateAdminUserReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *CreateAdminUserReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *CreateAdminUserReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *CreateAdminUserReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type CreateAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //账号ID
}

func (x *CreateAdminUserResp) Reset() {
	*x = CreateAdminUserResp{}
	mi := &file_dsl_rpc_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CreateAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CreateAdminUserResp) ProtoMessage() {}

func (x *CreateAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CreateAdminUserResp.ProtoReflect.Descriptor instead.
func (*CreateAdminUserResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{15}
}

func (x *CreateAdminUserResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAdminUserReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //账号ID
}

func (x *DeleteAdminUserReq) Reset() {
	*x = DeleteAdminUserReq{}
	mi := &file_dsl_rpc_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAdminUserReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminUserReq) ProtoMessage() {}

func (x *DeleteAdminUserReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminUserReq.ProtoReflect.Descriptor instead.
func (*DeleteAdminUserReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{16}
}

func (x *DeleteAdminUserReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type DeleteAdminUserResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *DeleteAdminUserResp) Reset() {
	*x = DeleteAdminUserResp{}
	mi := &file_dsl_rpc_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *DeleteAdminUserResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*DeleteAdminUserResp) ProtoMessage() {}

func (x *DeleteAdminUserResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use DeleteAdminUserResp.ProtoReflect.Descriptor instead.
func (*DeleteAdminUserResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{17}
}

type AdminUserListReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	STime     int64  `protobuf:"varint,1,opt,name=sTime,proto3" json:"sTime,omitempty"`   //注册开始时间
	ETime     int64  `protobuf:"varint,2,opt,name=eTime,proto3" json:"eTime,omitempty"`   //注册解释时间
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` //状态  1=正常 2=异常
	SearchKey string `protobuf:"bytes,4,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Page      int64  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64  `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
}

func (x *AdminUserListReq) Reset() {
	*x = AdminUserListReq{}
	mi := &file_dsl_rpc_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserListReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserListReq) ProtoMessage() {}

func (x *AdminUserListReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserListReq.ProtoReflect.Descriptor instead.
func (*AdminUserListReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{18}
}

func (x *AdminUserListReq) GetSTime() int64 {
	if x != nil {
		return x.STime
	}
	return 0
}

func (x *AdminUserListReq) GetETime() int64 {
	if x != nil {
		return x.ETime
	}
	return 0
}

func (x *AdminUserListReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminUserListReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *AdminUserListReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdminUserListReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

type AdminUserListItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account   string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` //账号
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`       //状态 1=正常 2=异常
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	RoleId    int64  `protobuf:"varint,6,opt,name=roleId,proto3" json:"roleId,omitempty"`       //角色ID
	RoleName  string `protobuf:"bytes,7,opt,name=roleName,proto3" json:"roleName,omitempty"`    //角色名称
}

func (x *AdminUserListItem) Reset() {
	*x = AdminUserListItem{}
	mi := &file_dsl_rpc_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserListItem) ProtoMessage() {}

func (x *AdminUserListItem) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserListItem.ProtoReflect.Descriptor instead.
func (*AdminUserListItem) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{19}
}

func (x *AdminUserListItem) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminUserListItem) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *AdminUserListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminUserListItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *AdminUserListItem) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *AdminUserListItem) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *AdminUserListItem) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type AdminUserListResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*AdminUserListItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Page     int64                `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64                `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int64                `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *AdminUserListResp) Reset() {
	*x = AdminUserListResp{}
	mi := &file_dsl_rpc_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminUserListResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminUserListResp) ProtoMessage() {}

func (x *AdminUserListResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminUserListResp.ProtoReflect.Descriptor instead.
func (*AdminUserListResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{20}
}

func (x *AdminUserListResp) GetList() []*AdminUserListItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *AdminUserListResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *AdminUserListResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *AdminUserListResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetAdminDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id int64 `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"` //账号ID
}

func (x *GetAdminDetailReq) Reset() {
	*x = GetAdminDetailReq{}
	mi := &file_dsl_rpc_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDetailReq) ProtoMessage() {}

func (x *GetAdminDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDetailReq.ProtoReflect.Descriptor instead.
func (*GetAdminDetailReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{21}
}

func (x *GetAdminDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

type GetAdminDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id        int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account   string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"` //账号
	Name      string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Status    int32  `protobuf:"varint,4,opt,name=status,proto3" json:"status,omitempty"`       //状态 1=正常 2=异常
	CreatedAt int64  `protobuf:"varint,5,opt,name=createdAt,proto3" json:"createdAt,omitempty"` //创建时间
	RoleId    int64  `protobuf:"varint,6,opt,name=roleId,proto3" json:"roleId,omitempty"`       //角色ID
	RoleName  string `protobuf:"bytes,7,opt,name=roleName,proto3" json:"roleName,omitempty"`    //角色名称
}

func (x *GetAdminDetailResp) Reset() {
	*x = GetAdminDetailResp{}
	mi := &file_dsl_rpc_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetAdminDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetAdminDetailResp) ProtoMessage() {}

func (x *GetAdminDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetAdminDetailResp.ProtoReflect.Descriptor instead.
func (*GetAdminDetailResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{22}
}

func (x *GetAdminDetailResp) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *GetAdminDetailResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetAdminDetailResp) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *GetAdminDetailResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetAdminDetailResp) GetCreatedAt() int64 {
	if x != nil {
		return x.CreatedAt
	}
	return 0
}

func (x *GetAdminDetailResp) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

func (x *GetAdminDetailResp) GetRoleName() string {
	if x != nil {
		return x.RoleName
	}
	return ""
}

type UpdateAdminDetailReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id       int64  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Account  string `protobuf:"bytes,2,opt,name=account,proto3" json:"account,omitempty"`
	Name     string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	Password string `protobuf:"bytes,4,opt,name=password,proto3" json:"password,omitempty"`
	Status   int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	RoleId   int64  `protobuf:"varint,6,opt,name=roleId,proto3" json:"roleId,omitempty"`
}

func (x *UpdateAdminDetailReq) Reset() {
	*x = UpdateAdminDetailReq{}
	mi := &file_dsl_rpc_proto_msgTypes[23]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdminDetailReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminDetailReq) ProtoMessage() {}

func (x *UpdateAdminDetailReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[23]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminDetailReq.ProtoReflect.Descriptor instead.
func (*UpdateAdminDetailReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{23}
}

func (x *UpdateAdminDetailReq) GetId() int64 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *UpdateAdminDetailReq) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *UpdateAdminDetailReq) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *UpdateAdminDetailReq) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *UpdateAdminDetailReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateAdminDetailReq) GetRoleId() int64 {
	if x != nil {
		return x.RoleId
	}
	return 0
}

type UpdateAdminDetailResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateAdminDetailResp) Reset() {
	*x = UpdateAdminDetailResp{}
	mi := &file_dsl_rpc_proto_msgTypes[24]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateAdminDetailResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateAdminDetailResp) ProtoMessage() {}

func (x *UpdateAdminDetailResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[24]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateAdminDetailResp.ProtoReflect.Descriptor instead.
func (*UpdateAdminDetailResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{24}
}

type GetUserDetailByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *GetUserDetailByIdReq) Reset() {
	*x = GetUserDetailByIdReq{}
	mi := &file_dsl_rpc_proto_msgTypes[25]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDetailByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailByIdReq) ProtoMessage() {}

func (x *GetUserDetailByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[25]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailByIdReq.ProtoReflect.Descriptor instead.
func (*GetUserDetailByIdReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{25}
}

func (x *GetUserDetailByIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserDetailByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId       int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PhoneCode    string `protobuf:"bytes,2,opt,name=phoneCode,proto3" json:"phoneCode,omitempty"`
	Phone        string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	UAddress     string `protobuf:"bytes,4,opt,name=uAddress,proto3" json:"uAddress,omitempty"`
	Account      string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	PUserId      int64  `protobuf:"varint,6,opt,name=pUserId,proto3" json:"pUserId,omitempty"`
	Password     string `protobuf:"bytes,7,opt,name=password,proto3" json:"password,omitempty"`
	PasswordSign string `protobuf:"bytes,8,opt,name=passwordSign,proto3" json:"passwordSign,omitempty"`
	InviteCode   string `protobuf:"bytes,9,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	IsGoogle     int32  `protobuf:"varint,10,opt,name=isGoogle,proto3" json:"isGoogle,omitempty"`
	GoogleCode   string `protobuf:"bytes,11,opt,name=googleCode,proto3" json:"googleCode,omitempty"`
	Nickname     string `protobuf:"bytes,12,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl    string `protobuf:"bytes,13,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Status       int32  `protobuf:"varint,14,opt,name=status,proto3" json:"status,omitempty"`
	RealEmail    string `protobuf:"bytes,15,opt,name=realEmail,proto3" json:"realEmail,omitempty"`
}

func (x *GetUserDetailByIdResp) Reset() {
	*x = GetUserDetailByIdResp{}
	mi := &file_dsl_rpc_proto_msgTypes[26]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDetailByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailByIdResp) ProtoMessage() {}

func (x *GetUserDetailByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[26]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailByIdResp.ProtoReflect.Descriptor instead.
func (*GetUserDetailByIdResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{26}
}

func (x *GetUserDetailByIdResp) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserDetailByIdResp) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetUAddress() string {
	if x != nil {
		return x.UAddress
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetPUserId() int64 {
	if x != nil {
		return x.PUserId
	}
	return 0
}

func (x *GetUserDetailByIdResp) GetPassword() string {
	if x != nil {
		return x.Password
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetPasswordSign() string {
	if x != nil {
		return x.PasswordSign
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetIsGoogle() int32 {
	if x != nil {
		return x.IsGoogle
	}
	return 0
}

func (x *GetUserDetailByIdResp) GetGoogleCode() string {
	if x != nil {
		return x.GoogleCode
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserDetailByIdResp) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserDetailByIdResp) GetRealEmail() string {
	if x != nil {
		return x.RealEmail
	}
	return ""
}

type GetUserListByPageReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	STime     int64  `protobuf:"varint,1,opt,name=sTime,proto3" json:"sTime,omitempty"`   //注册开始时间
	ETime     int64  `protobuf:"varint,2,opt,name=eTime,proto3" json:"eTime,omitempty"`   //注册解释时间
	Status    int32  `protobuf:"varint,3,opt,name=status,proto3" json:"status,omitempty"` //状态  1=正常 2=异常
	SearchKey string `protobuf:"bytes,4,opt,name=searchKey,proto3" json:"searchKey,omitempty"`
	Page      int64  `protobuf:"varint,5,opt,name=page,proto3" json:"page,omitempty"`
	PageSize  int64  `protobuf:"varint,6,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	UserId    int64  `protobuf:"varint,7,opt,name=UserId,proto3" json:"UserId,omitempty"`
}

func (x *GetUserListByPageReq) Reset() {
	*x = GetUserListByPageReq{}
	mi := &file_dsl_rpc_proto_msgTypes[27]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByPageReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByPageReq) ProtoMessage() {}

func (x *GetUserListByPageReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[27]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByPageReq.ProtoReflect.Descriptor instead.
func (*GetUserListByPageReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{27}
}

func (x *GetUserListByPageReq) GetSTime() int64 {
	if x != nil {
		return x.STime
	}
	return 0
}

func (x *GetUserListByPageReq) GetETime() int64 {
	if x != nil {
		return x.ETime
	}
	return 0
}

func (x *GetUserListByPageReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserListByPageReq) GetSearchKey() string {
	if x != nil {
		return x.SearchKey
	}
	return ""
}

func (x *GetUserListByPageReq) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserListByPageReq) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserListByPageReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type GetUserListByPageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PhoneCode  string `protobuf:"bytes,2,opt,name=phoneCode,proto3" json:"phoneCode,omitempty"`
	Phone      string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	UAddress   string `protobuf:"bytes,4,opt,name=uAddress,proto3" json:"uAddress,omitempty"`
	Account    string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	InviteCode string `protobuf:"bytes,6,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	IsGoogle   int32  `protobuf:"varint,7,opt,name=isGoogle,proto3" json:"isGoogle,omitempty"`
	GoogleCode string `protobuf:"bytes,8,opt,name=googleCode,proto3" json:"googleCode,omitempty"`
	Nickname   string `protobuf:"bytes,9,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl  string `protobuf:"bytes,10,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Status     int32  `protobuf:"varint,11,opt,name=status,proto3" json:"status,omitempty"`
	RealEmail  string `protobuf:"bytes,12,opt,name=realEmail,proto3" json:"realEmail,omitempty"`
}

func (x *GetUserListByPageItem) Reset() {
	*x = GetUserListByPageItem{}
	mi := &file_dsl_rpc_proto_msgTypes[28]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByPageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByPageItem) ProtoMessage() {}

func (x *GetUserListByPageItem) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[28]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByPageItem.ProtoReflect.Descriptor instead.
func (*GetUserListByPageItem) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{28}
}

func (x *GetUserListByPageItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserListByPageItem) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *GetUserListByPageItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserListByPageItem) GetUAddress() string {
	if x != nil {
		return x.UAddress
	}
	return ""
}

func (x *GetUserListByPageItem) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetUserListByPageItem) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *GetUserListByPageItem) GetIsGoogle() int32 {
	if x != nil {
		return x.IsGoogle
	}
	return 0
}

func (x *GetUserListByPageItem) GetGoogleCode() string {
	if x != nil {
		return x.GoogleCode
	}
	return ""
}

func (x *GetUserListByPageItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserListByPageItem) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserListByPageItem) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *GetUserListByPageItem) GetRealEmail() string {
	if x != nil {
		return x.RealEmail
	}
	return ""
}

type GetUserListByPageResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List     []*GetUserListByPageItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
	Page     int64                    `protobuf:"varint,2,opt,name=page,proto3" json:"page,omitempty"`
	PageSize int64                    `protobuf:"varint,3,opt,name=pageSize,proto3" json:"pageSize,omitempty"`
	Total    int64                    `protobuf:"varint,4,opt,name=total,proto3" json:"total,omitempty"`
}

func (x *GetUserListByPageResp) Reset() {
	*x = GetUserListByPageResp{}
	mi := &file_dsl_rpc_proto_msgTypes[29]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByPageResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByPageResp) ProtoMessage() {}

func (x *GetUserListByPageResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[29]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByPageResp.ProtoReflect.Descriptor instead.
func (*GetUserListByPageResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{29}
}

func (x *GetUserListByPageResp) GetList() []*GetUserListByPageItem {
	if x != nil {
		return x.List
	}
	return nil
}

func (x *GetUserListByPageResp) GetPage() int64 {
	if x != nil {
		return x.Page
	}
	return 0
}

func (x *GetUserListByPageResp) GetPageSize() int64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *GetUserListByPageResp) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

type GetUserListByIdsReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserIds []int64 `protobuf:"varint,1,rep,packed,name=userIds,proto3" json:"userIds,omitempty"`
}

func (x *GetUserListByIdsReq) Reset() {
	*x = GetUserListByIdsReq{}
	mi := &file_dsl_rpc_proto_msgTypes[30]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByIdsReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByIdsReq) ProtoMessage() {}

func (x *GetUserListByIdsReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[30]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByIdsReq.ProtoReflect.Descriptor instead.
func (*GetUserListByIdsReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{30}
}

func (x *GetUserListByIdsReq) GetUserIds() []int64 {
	if x != nil {
		return x.UserIds
	}
	return nil
}

type GetUserListByIdsItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId    int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	PhoneCode string `protobuf:"bytes,2,opt,name=phoneCode,proto3" json:"phoneCode,omitempty"`
	Phone     string `protobuf:"bytes,3,opt,name=phone,proto3" json:"phone,omitempty"`
	UAddress  string `protobuf:"bytes,4,opt,name=uAddress,proto3" json:"uAddress,omitempty"`
	Account   string `protobuf:"bytes,5,opt,name=account,proto3" json:"account,omitempty"`
	Nickname  string `protobuf:"bytes,6,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl string `protobuf:"bytes,7,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	RealEmail string `protobuf:"bytes,8,opt,name=realEmail,proto3" json:"realEmail,omitempty"`
}

func (x *GetUserListByIdsItem) Reset() {
	*x = GetUserListByIdsItem{}
	mi := &file_dsl_rpc_proto_msgTypes[31]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByIdsItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByIdsItem) ProtoMessage() {}

func (x *GetUserListByIdsItem) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[31]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByIdsItem.ProtoReflect.Descriptor instead.
func (*GetUserListByIdsItem) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{31}
}

func (x *GetUserListByIdsItem) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserListByIdsItem) GetPhoneCode() string {
	if x != nil {
		return x.PhoneCode
	}
	return ""
}

func (x *GetUserListByIdsItem) GetPhone() string {
	if x != nil {
		return x.Phone
	}
	return ""
}

func (x *GetUserListByIdsItem) GetUAddress() string {
	if x != nil {
		return x.UAddress
	}
	return ""
}

func (x *GetUserListByIdsItem) GetAccount() string {
	if x != nil {
		return x.Account
	}
	return ""
}

func (x *GetUserListByIdsItem) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *GetUserListByIdsItem) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *GetUserListByIdsItem) GetRealEmail() string {
	if x != nil {
		return x.RealEmail
	}
	return ""
}

type GetUserListByIdsResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*GetUserListByIdsItem `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *GetUserListByIdsResp) Reset() {
	*x = GetUserListByIdsResp{}
	mi := &file_dsl_rpc_proto_msgTypes[32]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserListByIdsResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserListByIdsResp) ProtoMessage() {}

func (x *GetUserListByIdsResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[32]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserListByIdsResp.ProtoReflect.Descriptor instead.
func (*GetUserListByIdsResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{32}
}

func (x *GetUserListByIdsResp) GetList() []*GetUserListByIdsItem {
	if x != nil {
		return x.List
	}
	return nil
}

type UpdateUserGoogleCodeByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId int64 `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
}

func (x *UpdateUserGoogleCodeByIdReq) Reset() {
	*x = UpdateUserGoogleCodeByIdReq{}
	mi := &file_dsl_rpc_proto_msgTypes[33]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserGoogleCodeByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGoogleCodeByIdReq) ProtoMessage() {}

func (x *UpdateUserGoogleCodeByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[33]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGoogleCodeByIdReq.ProtoReflect.Descriptor instead.
func (*UpdateUserGoogleCodeByIdReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{33}
}

func (x *UpdateUserGoogleCodeByIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

type UpdateUserGoogleCodeByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserGoogleCodeByIdResp) Reset() {
	*x = UpdateUserGoogleCodeByIdResp{}
	mi := &file_dsl_rpc_proto_msgTypes[34]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserGoogleCodeByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserGoogleCodeByIdResp) ProtoMessage() {}

func (x *UpdateUserGoogleCodeByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[34]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserGoogleCodeByIdResp.ProtoReflect.Descriptor instead.
func (*UpdateUserGoogleCodeByIdResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{34}
}

type CheckUserGoogleCodeByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	GoogleCode string `protobuf:"bytes,2,opt,name=googleCode,proto3" json:"googleCode,omitempty"`
}

func (x *CheckUserGoogleCodeByIdReq) Reset() {
	*x = CheckUserGoogleCodeByIdReq{}
	mi := &file_dsl_rpc_proto_msgTypes[35]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserGoogleCodeByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserGoogleCodeByIdReq) ProtoMessage() {}

func (x *CheckUserGoogleCodeByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[35]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserGoogleCodeByIdReq.ProtoReflect.Descriptor instead.
func (*CheckUserGoogleCodeByIdReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{35}
}

func (x *CheckUserGoogleCodeByIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *CheckUserGoogleCodeByIdReq) GetGoogleCode() string {
	if x != nil {
		return x.GoogleCode
	}
	return ""
}

type CheckUserGoogleCodeByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *CheckUserGoogleCodeByIdResp) Reset() {
	*x = CheckUserGoogleCodeByIdResp{}
	mi := &file_dsl_rpc_proto_msgTypes[36]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *CheckUserGoogleCodeByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CheckUserGoogleCodeByIdResp) ProtoMessage() {}

func (x *CheckUserGoogleCodeByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[36]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CheckUserGoogleCodeByIdResp.ProtoReflect.Descriptor instead.
func (*CheckUserGoogleCodeByIdResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{36}
}

type UpdateUserDetailByIdReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId         int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	IsGoogle       int32  `protobuf:"varint,2,opt,name=isGoogle,proto3" json:"isGoogle,omitempty"`
	Nickname       string `protobuf:"bytes,3,opt,name=nickname,proto3" json:"nickname,omitempty"`
	AvatarUrl      string `protobuf:"bytes,4,opt,name=avatarUrl,proto3" json:"avatarUrl,omitempty"`
	Status         int32  `protobuf:"varint,5,opt,name=status,proto3" json:"status,omitempty"`
	RealEmail      string `protobuf:"bytes,6,opt,name=realEmail,proto3" json:"realEmail,omitempty"`
	LastOnlineTime int64  `protobuf:"varint,7,opt,name=lastOnlineTime,proto3" json:"lastOnlineTime,omitempty"`
	GoogleCode     string `protobuf:"bytes,8,opt,name=googleCode,proto3" json:"googleCode,omitempty"`
}

func (x *UpdateUserDetailByIdReq) Reset() {
	*x = UpdateUserDetailByIdReq{}
	mi := &file_dsl_rpc_proto_msgTypes[37]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserDetailByIdReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDetailByIdReq) ProtoMessage() {}

func (x *UpdateUserDetailByIdReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[37]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDetailByIdReq.ProtoReflect.Descriptor instead.
func (*UpdateUserDetailByIdReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{37}
}

func (x *UpdateUserDetailByIdReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *UpdateUserDetailByIdReq) GetIsGoogle() int32 {
	if x != nil {
		return x.IsGoogle
	}
	return 0
}

func (x *UpdateUserDetailByIdReq) GetNickname() string {
	if x != nil {
		return x.Nickname
	}
	return ""
}

func (x *UpdateUserDetailByIdReq) GetAvatarUrl() string {
	if x != nil {
		return x.AvatarUrl
	}
	return ""
}

func (x *UpdateUserDetailByIdReq) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *UpdateUserDetailByIdReq) GetRealEmail() string {
	if x != nil {
		return x.RealEmail
	}
	return ""
}

func (x *UpdateUserDetailByIdReq) GetLastOnlineTime() int64 {
	if x != nil {
		return x.LastOnlineTime
	}
	return 0
}

func (x *UpdateUserDetailByIdReq) GetGoogleCode() string {
	if x != nil {
		return x.GoogleCode
	}
	return ""
}

type UpdateUserDetailByIdResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *UpdateUserDetailByIdResp) Reset() {
	*x = UpdateUserDetailByIdResp{}
	mi := &file_dsl_rpc_proto_msgTypes[38]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *UpdateUserDetailByIdResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*UpdateUserDetailByIdResp) ProtoMessage() {}

func (x *UpdateUserDetailByIdResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[38]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use UpdateUserDetailByIdResp.ProtoReflect.Descriptor instead.
func (*UpdateUserDetailByIdResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{38}
}

type GetUserDetailByQueryReq struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId     int64  `protobuf:"varint,1,opt,name=userId,proto3" json:"userId,omitempty"`
	InviteCode string `protobuf:"bytes,2,opt,name=inviteCode,proto3" json:"inviteCode,omitempty"`
	RealEmail  string `protobuf:"bytes,3,opt,name=realEmail,proto3" json:"realEmail,omitempty"`
}

func (x *GetUserDetailByQueryReq) Reset() {
	*x = GetUserDetailByQueryReq{}
	mi := &file_dsl_rpc_proto_msgTypes[39]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDetailByQueryReq) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailByQueryReq) ProtoMessage() {}

func (x *GetUserDetailByQueryReq) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[39]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailByQueryReq.ProtoReflect.Descriptor instead.
func (*GetUserDetailByQueryReq) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{39}
}

func (x *GetUserDetailByQueryReq) GetUserId() int64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *GetUserDetailByQueryReq) GetInviteCode() string {
	if x != nil {
		return x.InviteCode
	}
	return ""
}

func (x *GetUserDetailByQueryReq) GetRealEmail() string {
	if x != nil {
		return x.RealEmail
	}
	return ""
}

type GetUserDetailByQueryResp struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetUserDetailByQueryResp) Reset() {
	*x = GetUserDetailByQueryResp{}
	mi := &file_dsl_rpc_proto_msgTypes[40]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *GetUserDetailByQueryResp) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetUserDetailByQueryResp) ProtoMessage() {}

func (x *GetUserDetailByQueryResp) ProtoReflect() protoreflect.Message {
	mi := &file_dsl_rpc_proto_msgTypes[40]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetUserDetailByQueryResp.ProtoReflect.Descriptor instead.
func (*GetUserDetailByQueryResp) Descriptor() ([]byte, []int) {
	return file_dsl_rpc_proto_rawDescGZIP(), []int{40}
}

var File_dsl_rpc_proto protoreflect.FileDescriptor

var file_dsl_rpc_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x64, 0x73, 0x6c, 0x2f, 0x72, 0x70, 0x63, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x03, 0x72, 0x70, 0x63, 0x22, 0x49, 0x0a, 0x11, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x41,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22,
	0x42, 0x0a, 0x12, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x22, 0x23, 0x0a, 0x09, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71,
	0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x0c, 0x0a, 0x0a, 0x4c, 0x6f, 0x67, 0x6f,
	0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x22, 0x66, 0x0a, 0x14, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x45,
	0x0a, 0x15, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x47, 0x0a, 0x0f, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x40,
	0x0a, 0x10, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x22, 0x64, 0x0a, 0x12, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e,
	0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x07, 0x70, 0x55, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61,
	0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x43, 0x0a, 0x13, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74,
	0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x0d, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05,
	0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x22, 0x28, 0x0a, 0x0e, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x49, 0x0a, 0x11,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70,
	0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x22, 0x2a, 0x0a, 0x12, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x14, 0x0a,
	0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x22, 0x76, 0x0a, 0x12, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x04, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x22, 0x25, 0x0a, 0x13, 0x43,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02,
	0x69, 0x64, 0x22, 0x24, 0x0a, 0x12, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x22, 0x15, 0x0a, 0x13, 0x44, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x22,
	0xa4, 0x01, 0x0a, 0x10, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x54, 0x69, 0x6d, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73, 0x65, 0x61, 0x72,
	0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x73, 0x65, 0x61,
	0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x22, 0xbb, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07,
	0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18,
	0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74,
	0x12, 0x16, 0x0a, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x06, 0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65,
	0x4e, 0x61, 0x6d, 0x65, 0x22, 0x85, 0x01, 0x0a, 0x11, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73,
	0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69,
	0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61,
	0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x23, 0x0a, 0x11,
	0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69,
	0x64, 0x22, 0xbc, 0x01, 0x0a, 0x12, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65,
	0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75,
	0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x72, 0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f,
	0x6c, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x6f, 0x6c, 0x65, 0x4e, 0x61, 0x6d, 0x65,
	0x22, 0xa0, 0x01, 0x0a, 0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x02, 0x69, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f,
	0x75, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77,
	0x6f, 0x72, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x72,
	0x6f, 0x6c, 0x65, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x72, 0x6f, 0x6c,
	0x65, 0x49, 0x64, 0x22, 0x17, 0x0a, 0x15, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x22, 0x2e, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49,
	0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0xbf, 0x03, 0x0a,
	0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79,
	0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c,
	0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x70, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52, 0x07, 0x70, 0x55, 0x73, 0x65, 0x72,
	0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x12, 0x22,
	0x0a, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x69, 0x67, 0x6e, 0x18, 0x08,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x70, 0x61, 0x73, 0x73, 0x77, 0x6f, 0x72, 0x64, 0x53, 0x69,
	0x67, 0x6e, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x1e,
	0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x0b, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76,
	0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61,
	0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0f, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0xc0,
	0x01, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79,
	0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x12, 0x14, 0x0a, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x73, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x14, 0x0a,
	0x05, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x03, 0x52, 0x05, 0x65, 0x54,
	0x69, 0x6d, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x73,
	0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x73, 0x65, 0x61, 0x72, 0x63, 0x68, 0x4b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67,
	0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x55, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x55, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x22, 0xe5, 0x02, 0x0a, 0x15, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73,
	0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75,
	0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72,
	0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1e, 0x0a,
	0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x05, 0x52,
	0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63,
	0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55,
	0x72, 0x6c, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72,
	0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x0b, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72,
	0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x8d, 0x01, 0x0a, 0x15, 0x47, 0x65,
	0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52,
	0x65, 0x73, 0x70, 0x12, 0x2e, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x67, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x03, 0x52, 0x04, 0x70, 0x61, 0x67, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x03, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53,
	0x69, 0x7a, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x04, 0x20, 0x01,
	0x28, 0x03, 0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x22, 0x2f, 0x0a, 0x13, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x71,
	0x12, 0x18, 0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x03, 0x52, 0x07, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x73, 0x22, 0xf0, 0x01, 0x0a, 0x14, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x49,
	0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x70,
	0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x70, 0x68, 0x6f, 0x6e, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x14, 0x0a, 0x05, 0x70, 0x68, 0x6f,
	0x6e, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x05, 0x70, 0x68, 0x6f, 0x6e, 0x65, 0x12,
	0x1a, 0x0a, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x18, 0x04, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x75, 0x41, 0x64, 0x64, 0x72, 0x65, 0x73, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x61,
	0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x61, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1c, 0x0a, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x07,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12,
	0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18, 0x08, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x45, 0x0a,
	0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64,
	0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18, 0x01, 0x20,
	0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04,
	0x6c, 0x69, 0x73, 0x74, 0x22, 0x35, 0x0a, 0x1b, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73,
	0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x55,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43,
	0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x22, 0x54, 0x0a, 0x1a, 0x43,
	0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f,
	0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06, 0x75, 0x73, 0x65,
	0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49,
	0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18,
	0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64,
	0x65, 0x22, 0x1d, 0x0a, 0x1b, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70,
	0x22, 0x85, 0x02, 0x0a, 0x17, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x12, 0x16, 0x0a, 0x06,
	0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52, 0x06, 0x75, 0x73,
	0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x69, 0x73, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x6e, 0x69, 0x63, 0x6b, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x76, 0x61, 0x74, 0x61, 0x72, 0x55, 0x72, 0x6c, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74,
	0x61, 0x74, 0x75, 0x73, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74,
	0x75, 0x73, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x18,
	0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x26, 0x0a, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e, 0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69,
	0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0e, 0x6c, 0x61, 0x73, 0x74, 0x4f, 0x6e,
	0x6c, 0x69, 0x6e, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x67, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x22, 0x1a, 0x0a, 0x18, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x22, 0x6f, 0x0a, 0x17, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x12,
	0x16, 0x0a, 0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x69, 0x6e, 0x76, 0x69, 0x74,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x69, 0x6e, 0x76,
	0x69, 0x74, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1c, 0x0a, 0x09, 0x72, 0x65, 0x61, 0x6c, 0x45,
	0x6d, 0x61, 0x69, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x72, 0x65, 0x61, 0x6c,
	0x45, 0x6d, 0x61, 0x69, 0x6c, 0x22, 0x1a, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x73,
	0x70, 0x32, 0x86, 0x03, 0x0a, 0x10, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x53,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x35, 0x0a, 0x0a, 0x50, 0x61, 0x72, 0x73, 0x65, 0x54,
	0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50, 0x61, 0x72, 0x73, 0x65,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x13, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x50,
	0x61, 0x72, 0x73, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41, 0x0a,
	0x0e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12,
	0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x63,
	0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f,
	0x67, 0x69, 0x6e, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x73, 0x70,
	0x12, 0x3b, 0x0a, 0x0c, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c,
	0x12, 0x14, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x42, 0x79, 0x45, 0x6d,
	0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f, 0x67,
	0x69, 0x6e, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x12, 0x29, 0x0a,
	0x06, 0x4c, 0x6f, 0x67, 0x6f, 0x75, 0x74, 0x12, 0x0e, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x0f, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x4c, 0x6f,
	0x67, 0x6f, 0x75, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x11, 0x52, 0x65, 0x67, 0x69,
	0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x19, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x41, 0x63,
	0x63, 0x6f, 0x75, 0x6e, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52,
	0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x41, 0x63, 0x63, 0x6f, 0x75, 0x6e, 0x74,
	0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72,
	0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65,
	0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42, 0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71,
	0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x52, 0x65, 0x67, 0x69, 0x73, 0x74, 0x65, 0x72, 0x42,
	0x79, 0x45, 0x6d, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x32, 0xb0, 0x03, 0x0a, 0x10, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12,
	0x41, 0x0a, 0x0e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69,
	0x6e, 0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x6f, 0x67, 0x69, 0x6e, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x71, 0x1a, 0x18,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x43, 0x72, 0x65, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x44, 0x0a, 0x0f, 0x64, 0x65, 0x6c, 0x65,
	0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x12, 0x17, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65,
	0x72, 0x52, 0x65, 0x71, 0x1a, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x44, 0x65, 0x6c, 0x65, 0x74,
	0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x52, 0x65, 0x73, 0x70, 0x12, 0x3e,
	0x0a, 0x0d, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x15, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c,
	0x69, 0x73, 0x74, 0x52, 0x65, 0x71, 0x1a, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x41, 0x64, 0x6d,
	0x69, 0x6e, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x52, 0x65, 0x73, 0x70, 0x12, 0x41,
	0x0a, 0x0e, 0x67, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c,
	0x12, 0x16, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44,
	0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x71, 0x1a, 0x17, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73,
	0x70, 0x12, 0x4a, 0x0a, 0x11, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64,
	0x61, 0x74, 0x65, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65,
	0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x52, 0x65, 0x73, 0x70, 0x32, 0xd4, 0x04,
	0x0a, 0x0b, 0x55, 0x73, 0x65, 0x72, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x4a, 0x0a,
	0x11, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79,
	0x49, 0x64, 0x12, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e,
	0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x4a, 0x0a, 0x11, 0x47, 0x65, 0x74,
	0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x12, 0x19,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74,
	0x42, 0x79, 0x50, 0x61, 0x67, 0x65, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x50, 0x61, 0x67,
	0x65, 0x52, 0x65, 0x73, 0x70, 0x12, 0x47, 0x0a, 0x10, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72,
	0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x12, 0x18, 0x2e, 0x72, 0x70, 0x63, 0x2e,
	0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73,
	0x52, 0x65, 0x71, 0x1a, 0x19, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65,
	0x72, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x79, 0x49, 0x64, 0x73, 0x52, 0x65, 0x73, 0x70, 0x12, 0x5f,
	0x0a, 0x18, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x20, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x21, 0x2e, 0x72,
	0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f,
	0x67, 0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12,
	0x5c, 0x0a, 0x17, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67,
	0x6c, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1f, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c, 0x65,
	0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x71, 0x1a, 0x20, 0x2e, 0x72, 0x70,
	0x63, 0x2e, 0x43, 0x68, 0x65, 0x63, 0x6b, 0x55, 0x73, 0x65, 0x72, 0x47, 0x6f, 0x6f, 0x67, 0x6c,
	0x65, 0x43, 0x6f, 0x64, 0x65, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65, 0x73, 0x70, 0x12, 0x53, 0x0a,
	0x14, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69,
	0x6c, 0x42, 0x79, 0x49, 0x64, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x71, 0x1a, 0x1d, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x55, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64, 0x52, 0x65,
	0x73, 0x70, 0x12, 0x50, 0x0a, 0x14, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74,
	0x61, 0x69, 0x6c, 0x42, 0x79, 0x51, 0x75, 0x65, 0x72, 0x79, 0x12, 0x1c, 0x2e, 0x72, 0x70, 0x63,
	0x2e, 0x47, 0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79,
	0x51, 0x75, 0x65, 0x72, 0x79, 0x52, 0x65, 0x71, 0x1a, 0x1a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x47,
	0x65, 0x74, 0x55, 0x73, 0x65, 0x72, 0x44, 0x65, 0x74, 0x61, 0x69, 0x6c, 0x42, 0x79, 0x49, 0x64,
	0x52, 0x65, 0x73, 0x70, 0x42, 0x0b, 0x5a, 0x09, 0x2e, 0x2f, 0x75, 0x73, 0x65, 0x72, 0x52, 0x70,
	0x63, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_dsl_rpc_proto_rawDescOnce sync.Once
	file_dsl_rpc_proto_rawDescData = file_dsl_rpc_proto_rawDesc
)

func file_dsl_rpc_proto_rawDescGZIP() []byte {
	file_dsl_rpc_proto_rawDescOnce.Do(func() {
		file_dsl_rpc_proto_rawDescData = protoimpl.X.CompressGZIP(file_dsl_rpc_proto_rawDescData)
	})
	return file_dsl_rpc_proto_rawDescData
}

var file_dsl_rpc_proto_msgTypes = make([]protoimpl.MessageInfo, 41)
var file_dsl_rpc_proto_goTypes = []any{
	(*LoginByAccountReq)(nil),            // 0: rpc.LoginByAccountReq
	(*LoginByAccountResp)(nil),           // 1: rpc.LoginByAccountResp
	(*LogoutReq)(nil),                    // 2: rpc.LogoutReq
	(*LogoutResp)(nil),                   // 3: rpc.LogoutResp
	(*RegisterByAccountReq)(nil),         // 4: rpc.RegisterByAccountReq
	(*RegisterByAccountResp)(nil),        // 5: rpc.RegisterByAccountResp
	(*LoginByEmailReq)(nil),              // 6: rpc.LoginByEmailReq
	(*LoginByEmailResp)(nil),             // 7: rpc.LoginByEmailResp
	(*RegisterByEmailReq)(nil),           // 8: rpc.RegisterByEmailReq
	(*RegisterByEmailResp)(nil),          // 9: rpc.RegisterByEmailResp
	(*ParseTokenReq)(nil),                // 10: rpc.ParseTokenReq
	(*ParseTokenResp)(nil),               // 11: rpc.ParseTokenResp
	(*AdminUserLoginReq)(nil),            // 12: rpc.AdminUserLoginReq
	(*AdminUserLoginResp)(nil),           // 13: rpc.AdminUserLoginResp
	(*CreateAdminUserReq)(nil),           // 14: rpc.CreateAdminUserReq
	(*CreateAdminUserResp)(nil),          // 15: rpc.CreateAdminUserResp
	(*DeleteAdminUserReq)(nil),           // 16: rpc.DeleteAdminUserReq
	(*DeleteAdminUserResp)(nil),          // 17: rpc.DeleteAdminUserResp
	(*AdminUserListReq)(nil),             // 18: rpc.AdminUserListReq
	(*AdminUserListItem)(nil),            // 19: rpc.AdminUserListItem
	(*AdminUserListResp)(nil),            // 20: rpc.AdminUserListResp
	(*GetAdminDetailReq)(nil),            // 21: rpc.GetAdminDetailReq
	(*GetAdminDetailResp)(nil),           // 22: rpc.GetAdminDetailResp
	(*UpdateAdminDetailReq)(nil),         // 23: rpc.UpdateAdminDetailReq
	(*UpdateAdminDetailResp)(nil),        // 24: rpc.UpdateAdminDetailResp
	(*GetUserDetailByIdReq)(nil),         // 25: rpc.GetUserDetailByIdReq
	(*GetUserDetailByIdResp)(nil),        // 26: rpc.GetUserDetailByIdResp
	(*GetUserListByPageReq)(nil),         // 27: rpc.GetUserListByPageReq
	(*GetUserListByPageItem)(nil),        // 28: rpc.GetUserListByPageItem
	(*GetUserListByPageResp)(nil),        // 29: rpc.GetUserListByPageResp
	(*GetUserListByIdsReq)(nil),          // 30: rpc.GetUserListByIdsReq
	(*GetUserListByIdsItem)(nil),         // 31: rpc.GetUserListByIdsItem
	(*GetUserListByIdsResp)(nil),         // 32: rpc.GetUserListByIdsResp
	(*UpdateUserGoogleCodeByIdReq)(nil),  // 33: rpc.UpdateUserGoogleCodeByIdReq
	(*UpdateUserGoogleCodeByIdResp)(nil), // 34: rpc.UpdateUserGoogleCodeByIdResp
	(*CheckUserGoogleCodeByIdReq)(nil),   // 35: rpc.CheckUserGoogleCodeByIdReq
	(*CheckUserGoogleCodeByIdResp)(nil),  // 36: rpc.CheckUserGoogleCodeByIdResp
	(*UpdateUserDetailByIdReq)(nil),      // 37: rpc.UpdateUserDetailByIdReq
	(*UpdateUserDetailByIdResp)(nil),     // 38: rpc.UpdateUserDetailByIdResp
	(*GetUserDetailByQueryReq)(nil),      // 39: rpc.GetUserDetailByQueryReq
	(*GetUserDetailByQueryResp)(nil),     // 40: rpc.GetUserDetailByQueryResp
}
var file_dsl_rpc_proto_depIdxs = []int32{
	19, // 0: rpc.AdminUserListResp.list:type_name -> rpc.AdminUserListItem
	28, // 1: rpc.GetUserListByPageResp.list:type_name -> rpc.GetUserListByPageItem
	31, // 2: rpc.GetUserListByIdsResp.list:type_name -> rpc.GetUserListByIdsItem
	10, // 3: rpc.UserLoginService.ParseToken:input_type -> rpc.ParseTokenReq
	0,  // 4: rpc.UserLoginService.LoginByAccount:input_type -> rpc.LoginByAccountReq
	6,  // 5: rpc.UserLoginService.LoginByEmail:input_type -> rpc.LoginByEmailReq
	2,  // 6: rpc.UserLoginService.Logout:input_type -> rpc.LogoutReq
	4,  // 7: rpc.UserLoginService.RegisterByAccount:input_type -> rpc.RegisterByAccountReq
	8,  // 8: rpc.UserLoginService.RegisterByEmail:input_type -> rpc.RegisterByEmailReq
	12, // 9: rpc.AdminUserService.adminUserLogin:input_type -> rpc.AdminUserLoginReq
	14, // 10: rpc.AdminUserService.createAdminUser:input_type -> rpc.CreateAdminUserReq
	16, // 11: rpc.AdminUserService.deleteAdminUser:input_type -> rpc.DeleteAdminUserReq
	18, // 12: rpc.AdminUserService.adminUserList:input_type -> rpc.AdminUserListReq
	21, // 13: rpc.AdminUserService.getAdminDetail:input_type -> rpc.GetAdminDetailReq
	23, // 14: rpc.AdminUserService.updateAdminDetail:input_type -> rpc.UpdateAdminDetailReq
	25, // 15: rpc.UserService.GetUserDetailById:input_type -> rpc.GetUserDetailByIdReq
	27, // 16: rpc.UserService.GetUserListByPage:input_type -> rpc.GetUserListByPageReq
	30, // 17: rpc.UserService.GetUserListByIds:input_type -> rpc.GetUserListByIdsReq
	33, // 18: rpc.UserService.UpdateUserGoogleCodeById:input_type -> rpc.UpdateUserGoogleCodeByIdReq
	35, // 19: rpc.UserService.CheckUserGoogleCodeById:input_type -> rpc.CheckUserGoogleCodeByIdReq
	37, // 20: rpc.UserService.UpdateUserDetailById:input_type -> rpc.UpdateUserDetailByIdReq
	39, // 21: rpc.UserService.GetUserDetailByQuery:input_type -> rpc.GetUserDetailByQueryReq
	11, // 22: rpc.UserLoginService.ParseToken:output_type -> rpc.ParseTokenResp
	1,  // 23: rpc.UserLoginService.LoginByAccount:output_type -> rpc.LoginByAccountResp
	7,  // 24: rpc.UserLoginService.LoginByEmail:output_type -> rpc.LoginByEmailResp
	3,  // 25: rpc.UserLoginService.Logout:output_type -> rpc.LogoutResp
	5,  // 26: rpc.UserLoginService.RegisterByAccount:output_type -> rpc.RegisterByAccountResp
	9,  // 27: rpc.UserLoginService.RegisterByEmail:output_type -> rpc.RegisterByEmailResp
	13, // 28: rpc.AdminUserService.adminUserLogin:output_type -> rpc.AdminUserLoginResp
	15, // 29: rpc.AdminUserService.createAdminUser:output_type -> rpc.CreateAdminUserResp
	17, // 30: rpc.AdminUserService.deleteAdminUser:output_type -> rpc.DeleteAdminUserResp
	20, // 31: rpc.AdminUserService.adminUserList:output_type -> rpc.AdminUserListResp
	22, // 32: rpc.AdminUserService.getAdminDetail:output_type -> rpc.GetAdminDetailResp
	24, // 33: rpc.AdminUserService.updateAdminDetail:output_type -> rpc.UpdateAdminDetailResp
	26, // 34: rpc.UserService.GetUserDetailById:output_type -> rpc.GetUserDetailByIdResp
	29, // 35: rpc.UserService.GetUserListByPage:output_type -> rpc.GetUserListByPageResp
	32, // 36: rpc.UserService.GetUserListByIds:output_type -> rpc.GetUserListByIdsResp
	34, // 37: rpc.UserService.UpdateUserGoogleCodeById:output_type -> rpc.UpdateUserGoogleCodeByIdResp
	36, // 38: rpc.UserService.CheckUserGoogleCodeById:output_type -> rpc.CheckUserGoogleCodeByIdResp
	38, // 39: rpc.UserService.UpdateUserDetailById:output_type -> rpc.UpdateUserDetailByIdResp
	26, // 40: rpc.UserService.GetUserDetailByQuery:output_type -> rpc.GetUserDetailByIdResp
	22, // [22:41] is the sub-list for method output_type
	3,  // [3:22] is the sub-list for method input_type
	3,  // [3:3] is the sub-list for extension type_name
	3,  // [3:3] is the sub-list for extension extendee
	0,  // [0:3] is the sub-list for field type_name
}

func init() { file_dsl_rpc_proto_init() }
func file_dsl_rpc_proto_init() {
	if File_dsl_rpc_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_dsl_rpc_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   41,
			NumExtensions: 0,
			NumServices:   3,
		},
		GoTypes:           file_dsl_rpc_proto_goTypes,
		DependencyIndexes: file_dsl_rpc_proto_depIdxs,
		MessageInfos:      file_dsl_rpc_proto_msgTypes,
	}.Build()
	File_dsl_rpc_proto = out.File
	file_dsl_rpc_proto_rawDesc = nil
	file_dsl_rpc_proto_goTypes = nil
	file_dsl_rpc_proto_depIdxs = nil
}
